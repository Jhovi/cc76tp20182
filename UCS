import math
import heapq as hq

def Distancia(x1,x2,y1,y2):
    dist = math.sqrt((x1-x2)**2 + (y1-y2)**2)
    return dist
                    
def UCS(G,s,t):
    n = len(G)
    visited = [False]*n
    weights = [math.inf]*n
    path = [-1]*n
    queue = []
    hq.heappush(queue,(0,s))
    while len(queue)>0:
        g,u,c = hq.heappop(queue)
        if visited[u]: continue
            visited[u] = True
            for v,h in G[u]:
                f = g + h
                ct = c + path[v]
                if v == t:
                    return (f,ct)
                else:
                    if not visited[v]:
                        visited[v] = True
                        hq.heappush(queue,(f,v,ct))
        return queue
            
    
    
print(ucs(lee(dataset.csv,683891,683891))
